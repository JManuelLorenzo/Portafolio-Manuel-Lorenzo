


Lenguaje natural:
Se toma el valor de k, si es 0, es decir el caso base se devuelve 1, en los otros
casos simplemente se devuelve ese valor multiplicado por el output de la funcion usando
como parametro a k-1. Generando el efecto recursivo.
La parte 3 esta en el .java
Precondiciones:
K puede ser  Positivo o cero. 
K puede ser arbitrariamente grande. 
PostCondiciones:
Debe devolver exactamente la misma cantidad de veces multiplicada
K es el valor que sera ingresado como parametro. 
COMIENZO
Funcion factorial( k )
    SI  k = 0  ENTONCES // Caso Base //O(1)
        Retorna k+1 // O(1)
    FinSi
    SI k > 0 ENTONCES
        Retorna k * (factorial(k - 1)) O(1)
    SINO
        return 0
    FinSi
    
FIN
-----
Respuesta:

1) El caso base es de k = 0
Si puedo mientras que se cumpla que el numero no sea negativo, porque sino va ir decreciendo
infinitamente.
2)El orden se trata de O(T*1) siendo T la cantidad de entradas en la recursion. 
3)
El algoritmo en java que dise√±e retorna 0 si le introduce algun numero negativo.
Porque la operacion no esta definida para estos.
Estan los factoriales en el main. 
factorial(4) = 24